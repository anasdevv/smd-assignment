// Mocks generated by Mockito 5.4.6 from annotations
// in smd_project/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:smd_project/features/authentication/data/models/user_model.dart'
    as _i2;
import 'package:smd_project/features/authentication/domain/repositories/auth_repository.dart'
    as _i4;
import 'package:smd_project/features/groups/domain/entities/announcement_entity.dart'
    as _i7;
import 'package:smd_project/features/groups/domain/entities/group_entity.dart'
    as _i3;
import 'package:smd_project/features/groups/domain/repositories/group_repository.dart'
    as _i6;
import 'package:smd_project/features/messages/domain/entities/message_entity.dart'
    as _i13;
import 'package:smd_project/features/messages/domain/repositories/message_repository.dart'
    as _i12;
import 'package:smd_project/features/reminders/domain/entities/reminder_entity.dart'
    as _i11;
import 'package:smd_project/features/reminders/domain/repositories/reminder_repository.dart'
    as _i10;
import 'package:smd_project/features/tasks/domain/entities/task_entity.dart'
    as _i9;
import 'package:smd_project/features/tasks/domain/repositories/task_repository.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserModel_0 extends _i1.SmartFake implements _i2.UserModel {
  _FakeUserModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGroupEntity_1 extends _i1.SmartFake implements _i3.GroupEntity {
  _FakeGroupEntity_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i4.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.UserModel> signInWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #signInWithEmailAndPassword,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i5.Future<_i2.UserModel>);

  @override
  _i5.Future<_i2.UserModel> signUpWithEmailAndPassword(
    String? email,
    String? password,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signUpWithEmailAndPassword,
          [
            email,
            password,
            name,
          ],
        ),
        returnValue: _i5.Future<_i2.UserModel>.value(_FakeUserModel_0(
          this,
          Invocation.method(
            #signUpWithEmailAndPassword,
            [
              email,
              password,
              name,
            ],
          ),
        )),
      ) as _i5.Future<_i2.UserModel>);

  @override
  _i5.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i2.UserModel?> getCurrentUser() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [],
        ),
        returnValue: _i5.Future<_i2.UserModel?>.value(),
      ) as _i5.Future<_i2.UserModel?>);

  @override
  _i5.Future<void> sendPasswordResetEmail(String? email) => (super.noSuchMethod(
        Invocation.method(
          #sendPasswordResetEmail,
          [email],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateUserProfile(
    String? name,
    String? photoUrl,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [
            name,
            photoUrl,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [GroupRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGroupRepository extends _i1.Mock implements _i6.GroupRepository {
  MockGroupRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> createGroup(_i3.GroupEntity? group) => (super.noSuchMethod(
        Invocation.method(
          #createGroup,
          [group],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateGroup(_i3.GroupEntity? group) => (super.noSuchMethod(
        Invocation.method(
          #updateGroup,
          [group],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteGroup(String? groupId) => (super.noSuchMethod(
        Invocation.method(
          #deleteGroup,
          [groupId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.GroupEntity?> getGroup(String? groupId) => (super.noSuchMethod(
        Invocation.method(
          #getGroup,
          [groupId],
        ),
        returnValue: _i5.Future<_i3.GroupEntity?>.value(),
      ) as _i5.Future<_i3.GroupEntity?>);

  @override
  _i5.Future<List<_i3.GroupEntity>> getGroupsByUser(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupsByUser,
          [userId],
        ),
        returnValue:
            _i5.Future<List<_i3.GroupEntity>>.value(<_i3.GroupEntity>[]),
      ) as _i5.Future<List<_i3.GroupEntity>>);

  @override
  _i5.Future<List<_i3.GroupEntity>> getGroupsByLeader(String? leaderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupsByLeader,
          [leaderId],
        ),
        returnValue:
            _i5.Future<List<_i3.GroupEntity>>.value(<_i3.GroupEntity>[]),
      ) as _i5.Future<List<_i3.GroupEntity>>);

  @override
  _i5.Future<List<_i3.GroupEntity>> searchGroups(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchGroups,
          [query],
        ),
        returnValue:
            _i5.Future<List<_i3.GroupEntity>>.value(<_i3.GroupEntity>[]),
      ) as _i5.Future<List<_i3.GroupEntity>>);

  @override
  _i5.Future<void> addMember(
    String? groupId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMember,
          [
            groupId,
            userId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeMember(
    String? groupId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeMember,
          [
            groupId,
            userId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateLeader(
    String? groupId,
    String? newLeaderId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLeader,
          [
            groupId,
            newLeaderId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addTag(
    String? groupId,
    String? tag,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTag,
          [
            groupId,
            tag,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeTag(
    String? groupId,
    String? tag,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeTag,
          [
            groupId,
            tag,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addTask(
    String? groupId,
    String? taskId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTask,
          [
            groupId,
            taskId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeTask(
    String? groupId,
    String? taskId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeTask,
          [
            groupId,
            taskId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addFile(
    String? groupId,
    String? fileId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFile,
          [
            groupId,
            fileId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeFile(
    String? groupId,
    String? fileId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFile,
          [
            groupId,
            fileId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addReminder(
    String? groupId,
    String? reminderId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addReminder,
          [
            groupId,
            reminderId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeReminder(
    String? groupId,
    String? reminderId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeReminder,
          [
            groupId,
            reminderId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i3.GroupEntity>> getGroupsStream(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupsStream,
          [userId],
        ),
        returnValue: _i5.Stream<List<_i3.GroupEntity>>.empty(),
      ) as _i5.Stream<List<_i3.GroupEntity>>);

  @override
  _i5.Stream<List<_i3.GroupEntity>> getAllGroupsStream() => (super.noSuchMethod(
        Invocation.method(
          #getAllGroupsStream,
          [],
        ),
        returnValue: _i5.Stream<List<_i3.GroupEntity>>.empty(),
      ) as _i5.Stream<List<_i3.GroupEntity>>);

  @override
  _i5.Future<_i3.GroupEntity> getGroupById(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupById,
          [groupId],
        ),
        returnValue: _i5.Future<_i3.GroupEntity>.value(_FakeGroupEntity_1(
          this,
          Invocation.method(
            #getGroupById,
            [groupId],
          ),
        )),
      ) as _i5.Future<_i3.GroupEntity>);

  @override
  _i5.Future<void> createAnnouncement(_i7.AnnouncementEntity? announcement) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAnnouncement,
          [announcement],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateAnnouncement(_i7.AnnouncementEntity? announcement) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAnnouncement,
          [announcement],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteAnnouncement(String? announcementId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAnnouncement,
          [announcementId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i7.AnnouncementEntity>> getAnnouncementsByGroup(
          String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAnnouncementsByGroup,
          [groupId],
        ),
        returnValue: _i5.Future<List<_i7.AnnouncementEntity>>.value(
            <_i7.AnnouncementEntity>[]),
      ) as _i5.Future<List<_i7.AnnouncementEntity>>);

  @override
  _i5.Stream<List<_i7.AnnouncementEntity>> getAnnouncementsStream(
          String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAnnouncementsStream,
          [groupId],
        ),
        returnValue: _i5.Stream<List<_i7.AnnouncementEntity>>.empty(),
      ) as _i5.Stream<List<_i7.AnnouncementEntity>>);

  @override
  _i5.Future<void> addAttachment(
    String? announcementId,
    String? fileId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addAttachment,
          [
            announcementId,
            fileId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeAttachment(
    String? announcementId,
    String? fileId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeAttachment,
          [
            announcementId,
            fileId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i3.GroupEntity> getGroupByCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupByCode,
          [code],
        ),
        returnValue: _i5.Future<_i3.GroupEntity>.value(_FakeGroupEntity_1(
          this,
          Invocation.method(
            #getGroupByCode,
            [code],
          ),
        )),
      ) as _i5.Future<_i3.GroupEntity>);

  @override
  _i5.Future<void> joinGroupByCode(
    String? code,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #joinGroupByCode,
          [
            code,
            userId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [TaskRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskRepository extends _i1.Mock implements _i8.TaskRepository {
  MockTaskRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> createTask(
    String? groupId,
    _i9.TaskEntity? task,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTask,
          [
            groupId,
            task,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateTask(
    String? groupId,
    _i9.TaskEntity? task,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTask,
          [
            groupId,
            task,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteTask(
    String? groupId,
    String? taskId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [
            groupId,
            taskId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i9.TaskEntity?> getTask(
    String? groupId,
    String? taskId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTask,
          [
            groupId,
            taskId,
          ],
        ),
        returnValue: _i5.Future<_i9.TaskEntity?>.value(),
      ) as _i5.Future<_i9.TaskEntity?>);

  @override
  _i5.Stream<List<_i9.TaskEntity>> getGroupTasks(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupTasks,
          [groupId],
        ),
        returnValue: _i5.Stream<List<_i9.TaskEntity>>.empty(),
      ) as _i5.Stream<List<_i9.TaskEntity>>);

  @override
  _i5.Stream<List<_i9.TaskEntity>> getUserTasks(
    String? groupId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserTasks,
          [
            groupId,
            userId,
          ],
        ),
        returnValue: _i5.Stream<List<_i9.TaskEntity>>.empty(),
      ) as _i5.Stream<List<_i9.TaskEntity>>);

  @override
  _i5.Future<List<_i9.TaskEntity>> getOverdueTasks(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOverdueTasks,
          [groupId],
        ),
        returnValue: _i5.Future<List<_i9.TaskEntity>>.value(<_i9.TaskEntity>[]),
      ) as _i5.Future<List<_i9.TaskEntity>>);

  @override
  _i5.Future<void> updateTaskStatus(
    String? groupId,
    String? taskId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTaskStatus,
          [
            groupId,
            taskId,
            status,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> assignTask(
    String? groupId,
    String? taskId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #assignTask,
          [
            groupId,
            taskId,
            userId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> unassignTask(
    String? groupId,
    String? taskId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #unassignTask,
          [
            groupId,
            taskId,
            userId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> addTaskAttachment(
    String? groupId,
    String? taskId,
    String? attachmentUrl,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTaskAttachment,
          [
            groupId,
            taskId,
            attachmentUrl,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeTaskAttachment(
    String? groupId,
    String? taskId,
    String? attachmentUrl,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeTaskAttachment,
          [
            groupId,
            taskId,
            attachmentUrl,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [ReminderRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockReminderRepository extends _i1.Mock
    implements _i10.ReminderRepository {
  MockReminderRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> createReminder(
    String? groupId,
    _i11.ReminderEntity? reminder,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createReminder,
          [
            groupId,
            reminder,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateReminder(
    String? groupId,
    _i11.ReminderEntity? reminder,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateReminder,
          [
            groupId,
            reminder,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteReminder(
    String? groupId,
    String? reminderId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteReminder,
          [
            groupId,
            reminderId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<_i11.ReminderEntity?> getReminder(
    String? groupId,
    String? reminderId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getReminder,
          [
            groupId,
            reminderId,
          ],
        ),
        returnValue: _i5.Future<_i11.ReminderEntity?>.value(),
      ) as _i5.Future<_i11.ReminderEntity?>);

  @override
  _i5.Stream<List<_i11.ReminderEntity>> getGroupReminders(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupReminders,
          [groupId],
        ),
        returnValue: _i5.Stream<List<_i11.ReminderEntity>>.empty(),
      ) as _i5.Stream<List<_i11.ReminderEntity>>);

  @override
  _i5.Stream<List<_i11.ReminderEntity>> getUserReminders(
    String? groupId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserReminders,
          [
            groupId,
            userId,
          ],
        ),
        returnValue: _i5.Stream<List<_i11.ReminderEntity>>.empty(),
      ) as _i5.Stream<List<_i11.ReminderEntity>>);

  @override
  _i5.Future<List<_i11.ReminderEntity>> getUpcomingReminders(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUpcomingReminders,
          [groupId],
        ),
        returnValue: _i5.Future<List<_i11.ReminderEntity>>.value(
            <_i11.ReminderEntity>[]),
      ) as _i5.Future<List<_i11.ReminderEntity>>);

  @override
  _i5.Future<void> addUserToNotify(
    String? groupId,
    String? reminderId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserToNotify,
          [
            groupId,
            reminderId,
            userId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeUserFromNotify(
    String? groupId,
    String? reminderId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeUserFromNotify,
          [
            groupId,
            reminderId,
            userId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> toggleNotifyAll(
    String? groupId,
    String? reminderId,
    bool? notifyAll,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleNotifyAll,
          [
            groupId,
            reminderId,
            notifyAll,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [MessageRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMessageRepository extends _i1.Mock implements _i12.MessageRepository {
  MockMessageRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> sendMessage(
    String? groupId,
    _i13.MessageEntity? message,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [
            groupId,
            message,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteMessage(
    String? groupId,
    String? messageId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [
            groupId,
            messageId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> markMessageAsRead(
    String? groupId,
    String? messageId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #markMessageAsRead,
          [
            groupId,
            messageId,
            userId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Stream<List<_i13.MessageEntity>> getGroupMessages(String? groupId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGroupMessages,
          [groupId],
        ),
        returnValue: _i5.Stream<List<_i13.MessageEntity>>.empty(),
      ) as _i5.Stream<List<_i13.MessageEntity>>);

  @override
  _i5.Future<List<_i13.MessageEntity>> getMessagesBefore(
    String? groupId,
    DateTime? before,
    int? limit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMessagesBefore,
          [
            groupId,
            before,
            limit,
          ],
        ),
        returnValue:
            _i5.Future<List<_i13.MessageEntity>>.value(<_i13.MessageEntity>[]),
      ) as _i5.Future<List<_i13.MessageEntity>>);

  @override
  _i5.Future<List<_i13.MessageEntity>> searchMessages(
    String? groupId,
    String? query,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMessages,
          [
            groupId,
            query,
          ],
        ),
        returnValue:
            _i5.Future<List<_i13.MessageEntity>>.value(<_i13.MessageEntity>[]),
      ) as _i5.Future<List<_i13.MessageEntity>>);

  @override
  _i5.Stream<List<_i13.MessageEntity>> getUnreadMessages(
    String? groupId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnreadMessages,
          [
            groupId,
            userId,
          ],
        ),
        returnValue: _i5.Stream<List<_i13.MessageEntity>>.empty(),
      ) as _i5.Stream<List<_i13.MessageEntity>>);
}
